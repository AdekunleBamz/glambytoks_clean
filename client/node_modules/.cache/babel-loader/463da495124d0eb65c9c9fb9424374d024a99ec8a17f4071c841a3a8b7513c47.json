{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const checkAvailability = async date => {\n  try {\n    console.log('Checking availability for date:', date);\n    const response = await fetch(`${API_BASE_URL}/check-availability`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to check availability');\n    }\n    const slots = await response.json();\n    console.log('Received slots:', slots);\n    return slots;\n  } catch (error) {\n    console.error('Error checking availability:', error);\n    throw error;\n  }\n};\nexport const createBooking = async bookingData => {\n  try {\n    console.log('Creating booking:', bookingData);\n    const response = await fetch(`${API_BASE_URL}/create-booking`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bookingData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to create booking');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating booking:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","checkAvailability","date","console","log","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","slots","createBooking","bookingData"],"sources":["/home/bamidele/makeup-booking/glambytoks-booking/client/src/services/calendarService.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nexport const checkAvailability = async (date) => {\n  try {\n    console.log('Checking availability for date:', date);\n    const response = await fetch(`${API_BASE_URL}/check-availability`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ date }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to check availability');\n    }\n\n    const slots = await response.json();\n    console.log('Received slots:', slots);\n    return slots;\n  } catch (error) {\n    console.error('Error checking availability:', error);\n    throw error;\n  }\n};\n\nexport const createBooking = async (bookingData) => {\n  try {\n    console.log('Creating booking:', bookingData);\n    const response = await fetch(`${API_BASE_URL}/create-booking`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(bookingData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to create booking');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating booking:', error);\n    throw error;\n  }\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;EAC/C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,IAAI,CAAC;IACpD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,qBAAqB,EAAE;MACjEU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET;MAAK,CAAC;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,8BAA8B,CAAC;IACpE;IAEA,MAAMC,KAAK,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnCX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEa,KAAK,CAAC;IACrC,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACFhB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEe,WAAW,CAAC;IAC7C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,iBAAiB,EAAE;MAC7DU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,0BAA0B,CAAC;IAChE;IAEA,OAAO,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}